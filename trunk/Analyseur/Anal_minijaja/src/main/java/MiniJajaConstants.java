/* Generated By:JJTree&JavaCC: Do not edit this line. MiniJajaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJajaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BOOLEAN = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int FALSE = 9;
  /** RegularExpression Id. */
  int TRUE = 10;
  /** RegularExpression Id. */
  int IF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int MAIN = 13;
  /** RegularExpression Id. */
  int FINAL = 14;
  /** RegularExpression Id. */
  int INT = 15;
  /** RegularExpression Id. */
  int RETURN = 16;
  /** RegularExpression Id. */
  int VOID = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int LPAREN = 19;
  /** RegularExpression Id. */
  int RPAREN = 20;
  /** RegularExpression Id. */
  int LACCOL = 21;
  /** RegularExpression Id. */
  int RACCOL = 22;
  /** RegularExpression Id. */
  int LCROCH = 23;
  /** RegularExpression Id. */
  int RCROCH = 24;
  /** RegularExpression Id. */
  int POINTVIRG = 25;
  /** RegularExpression Id. */
  int VIRG = 26;
  /** RegularExpression Id. */
  int IDENTIFIER = 27;
  /** RegularExpression Id. */
  int NOMBRE = 28;
  /** RegularExpression Id. */
  int EQ = 29;
  /** RegularExpression Id. */
  int ASSIGN = 30;
  /** RegularExpression Id. */
  int BANG = 31;
  /** RegularExpression Id. */
  int INCR = 32;
  /** RegularExpression Id. */
  int PLUSASSIGN = 33;
  /** RegularExpression Id. */
  int PLUS = 34;
  /** RegularExpression Id. */
  int MINUS = 35;
  /** RegularExpression Id. */
  int STAR = 36;
  /** RegularExpression Id. */
  int SLASH = 37;
  /** RegularExpression Id. */
  int LT = 38;
  /** RegularExpression Id. */
  int OR = 39;
  /** RegularExpression Id. */
  int AND = 40;
  /** RegularExpression Id. */
  int GT = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"boolean\"",
    "\"class\"",
    "\"false\"",
    "\"true\"",
    "\"if\"",
    "\"else\"",
    "\"main\"",
    "\"final\"",
    "\"int\"",
    "\"return\"",
    "\"void\"",
    "\"while\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "<IDENTIFIER>",
    "<NOMBRE>",
    "\"==\"",
    "\"=\"",
    "\"!\"",
    "\"++\"",
    "\"+=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"<\"",
    "\"||\"",
    "\"&&\"",
    "\">\"",
  };

}
